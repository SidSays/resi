//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

@IsTest
public class WaveLens_Test {
	
	// This test method should give 100% coverage
	static testMethod void testParse() {
		String json = '{'+
		'  \"allowPreview\": true,'+
		'  \"assetSharingUrl\": \"https://onecomcast--Insightsv2.cs11.my.salesforce.com/analytics/wave/lens?assetId=0FKZ00000008OOcOAM&orgId=00DZ000000Mibvt&loginHost=cs11.salesforce.com&urlType=sharing\",'+
		'  \"createdBy\": {'+
		'    \"id\": \"005G0000004KRG3IAO\",'+
		'    \"name\": \"Anand Narasimhan\",'+
		'    \"profilePhotoUrl\": \"https://onecomcast--Insightsv2--c.cs11.content.force.com/profilephoto/005/T\"'+
		'  },'+
		'  \"createdDate\": \"2016-06-03T14:37:02.000Z\",'+
		'  \"dataset\": {'+
		'    \"id\": \"0FbZ0000000003FKAQ\",'+
		'    \"name\": \"Address49MM\",'+
		'    \"url\": \"/services/data/v36.0/wave/datasets/0FbZ0000000003FKAQ\"'+
		'  },'+
		'  \"files\": ['+
		'    {'+
		'      \"contentType\": \"image/png\",'+
		'      \"fileLength\": 11824,'+
		'      \"fileName\": \"assetPreviewThumb\",'+
		'      \"id\": \"0FJZ00000008ONPOA2\",'+
		'      \"lastModifiedDate\": \"2016-06-03T14:39:51.000Z\",'+
		'      \"url\": \"/services/data/v36.0/wave/lenses/0FKZ00000008OOcOAM/files/0FJZ00000008ONPOA2\"'+
		'    }'+
		'  ],'+
		'  \"filesUrl\": \"/services/data/v36.0/wave/lenses/0FKZ00000008OOcOAM/files\",'+
		'  \"folder\": {'+
		'    \"id\": \"005G0000004KRG3IAO\"'+
		'  },'+
		'  \"id\": \"0FKZ00000008OOcOAM\",'+
		'  \"label\": \"Bith South Non Subs\",'+
		'  \"lastAccessedDate\": \"2016-06-06T18:26:42.000Z\",'+
		'  \"lastModifiedBy\": {'+
		'    \"id\": \"005G0000004KRG3IAO\",'+
		'    \"name\": \"Anand Narasimhan\",'+
		'    \"profilePhotoUrl\": \"https://onecomcast--Insightsv2--c.cs11.content.force.com/profilephoto/005/T\"'+
		'  },'+
		'  \"lastModifiedDate\": \"2016-06-03T14:39:51.000Z\",'+
		'  \"name\": \"Bith_South_Non_Subs\",'+
		'  \"permissions\": {'+
		'    \"manage\": true,'+
		'    \"modify\": true,'+
		'    \"view\": true'+
		'  },'+
		'  \"refreshDate\": \"2014-10-28T07:08:46.000Z\",'+
		'  \"state\": {'+
		'    \"query\": {'+
		'      \"query\": \"{&amp;quot;filters&amp;quot;:[[&amp;quot;Region__c&amp;quot;,[&amp;quot;Big South&amp;quot;],&amp;quot;in&amp;quot;],[&amp;quot;Status__c&amp;quot;,[&amp;quot;Former&amp;quot;,&amp;quot;Never&amp;quot;],&amp;quot;in&amp;quot;]],&amp;quot;values&amp;quot;:[&amp;quot;Non_Marketable__c&amp;quot;,&amp;quot;Assigned_Date__c&amp;quot;,&amp;quot;City__c&amp;quot;,&amp;quot;Comcast_Division__c&amp;quot;,&amp;quot;Disconnected__c&amp;quot;,&amp;quot;HSI_Active__c&amp;quot;,&amp;quot;Installation_Status__c&amp;quot;,&amp;quot;Last_Knock_Date__c&amp;quot;,&amp;quot;Microsegment__c&amp;quot;,&amp;quot;Region__c&amp;quot;,&amp;quot;State__c&amp;quot;]}\",'+
		'      \"version\": -1'+
		'    }'+
		'  },'+
		'  \"type\": \"lens\",'+
		'  \"url\": \"/services/data/v36.0/wave/lenses/0FKZ00000008OOcOAM\",'+
		'  \"visualizationType\": \"valuestable\"'+
		'}';
		WaveLens r = WaveLens.parse(json);
		System.assert(r != null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WaveLens.CreatedBy objCreatedBy = new WaveLens.CreatedBy(System.JSON.createParser(json));
		System.assert(objCreatedBy != null);
		System.assert(objCreatedBy.id == null);
		System.assert(objCreatedBy.name == null);
		System.assert(objCreatedBy.profilePhotoUrl == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WaveLens.Query objQuery = new WaveLens.Query(System.JSON.createParser(json));
		System.assert(objQuery != null);
		System.assert(objQuery.query == null);
		System.assert(objQuery.version == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WaveLens objRoot = new WaveLens(System.JSON.createParser(json));
		System.assert(objRoot != null);
		System.assert(objRoot.allowPreview == null);
		System.assert(objRoot.assetSharingUrl == null);
		System.assert(objRoot.createdBy == null);
		System.assert(objRoot.createdDate == null);
		System.assert(objRoot.dataset == null);
		System.assert(objRoot.files == null);
		System.assert(objRoot.filesUrl == null);
		System.assert(objRoot.folder == null);
		System.assert(objRoot.id == null);
		System.assert(objRoot.label == null);
		System.assert(objRoot.lastAccessedDate == null);
		System.assert(objRoot.lastModifiedBy == null);
		System.assert(objRoot.lastModifiedDate == null);
		System.assert(objRoot.name == null);
		System.assert(objRoot.permissions == null);
		System.assert(objRoot.refreshDate == null);
		System.assert(objRoot.state == null);
		System.assert(objRoot.type_Z == null);
		System.assert(objRoot.url == null);
		System.assert(objRoot.visualizationType == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WaveLens.Dataset objDataset = new WaveLens.Dataset(System.JSON.createParser(json));
		System.assert(objDataset != null);
		System.assert(objDataset.id == null);
		System.assert(objDataset.name == null);
		System.assert(objDataset.url == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WaveLens.State objState = new WaveLens.State(System.JSON.createParser(json));
		System.assert(objState != null);
		System.assert(objState.query == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WaveLens.Permissions objPermissions = new WaveLens.Permissions(System.JSON.createParser(json));
		System.assert(objPermissions != null);
		System.assert(objPermissions.manage == null);
		System.assert(objPermissions.modify == null);
		System.assert(objPermissions.view == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WaveLens.Files objFiles = new WaveLens.Files(System.JSON.createParser(json));
		System.assert(objFiles != null);
		System.assert(objFiles.contentType == null);
		System.assert(objFiles.fileLength == null);
		System.assert(objFiles.fileName == null);
		System.assert(objFiles.id == null);
		System.assert(objFiles.lastModifiedDate == null);
		System.assert(objFiles.url == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WaveLens.Folder objFolder = new WaveLens.Folder(System.JSON.createParser(json));
		System.assert(objFolder != null);
		System.assert(objFolder.id == null);
	}
}