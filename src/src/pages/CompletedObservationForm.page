<!-- 
/**********************************************************
* Page Name: CompletedObservationForm
* Author: Ashish Sonawane, Accenture
* Date: 21-March-2016 
* Description: Use to show walkalong in readonly mode to users
* Last Modified by:Amit Kumar Pradhan(Combined Super Coach Observation)
* Last Modified by/Date/Description: Animesh Datta, 03-March-2017. Description: Incorporate changes for Private Notes (added new field)
* Last Modified by: Shalaka Kadwade; 08-May-2017; US1061559 - Changes done for displaying "Submitted FeedBack of your Rep" as a default option on Completed observation.
***********************************************************/
--> 

<apex:page showQuickActionVfHeader="false" controller="WalkalongUtilsReadOnly"   showHeader="false" standardStylesheets="false" sidebar="false" applyBodyTag="false" applyHtmlTag="false" docType="html-5.0" readOnly="true">

<html class="no-js" lang="" ng-app="WalkAlongApp" ng-controller="WalkalongUtilsReadOnly" ng-init="initializeData()"> <!--<![endif]-->
    <head>
        <meta charset="utf-8"/>
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>
        <title></title>
        <meta name="description" content=""/>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
        <script src="{!URLFOR($Resource.bootstrap,'js/vendor/modernizr-2.8.3-respond-1.4.2.min.js')}"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular.min.js"></script>
        <script src="{!URLFOR($Resource.walkalong,'js/vendor/bootstrap.min.js')}"></script>
        <script type='text/javascript' src='/canvas/sdk/js/publisher.js'/>     
        <script src="/soap/ajax/36.0/connection.js" type="text/javascript"></script>
        <script src="/soap/ajax/24.0/apex.js" type="text/javascript"></script>
        <link rel="stylesheet" href="{!URLFOR($Resource.bootstrap,'css/bootstrap.min.css')}"/>
        <link rel="stylesheet" href="{!URLFOR($Resource.bootstrap,'css/bootstrap-theme.min.css')}"/>
        <link rel="stylesheet" href="{!URLFOR($Resource.bootstrap,'css/main.css')}"/>
        <link rel="stylesheet" href="{!URLFOR($Resource.bootstrap_sf1,'css/bootstrap.css')}"></link>
        <style>
            body {
                padding-top: 10px;
                padding-bottom: 10px;
            }

            .btn-default.active{
                color: #ffffff;
                background-color: crimson;
                color:white;
                border-color: #2585c1;
            }

            span.glyphicon-comment {
                font-size: 1.2em;
            }
             #loading {  
                position:absolute;
                top:0;
                left:0;
                width:100%;
                height:100%;
                z-index:1000;
                background-color:grey;
                opacity: .8;
             }

            .ajax-loader {
                position: absolute;
                left: 50%;
                top: 50%;
                margin-left: -32px; /* -1 * image width / 2 */
                margin-top: -32px;  /* -1 * image height / 2 */
                display: block;     
            }

            .walkalong_modal{
              z-index: 3000;
            }
            
           .divmargin{
                margin-top:1%
            }
            
           <!-- #textarea {
                -moz-appearance: textfield-multiline;
                -webkit-appearance: textarea;
                overflow: auto;
                padding: 2px;
                resize: both;
                width: 920px;
                height: 60px;
                <!--background: white;
            }-->
            #textarea {
                height:50px;
                overflow: auto;
            }
            textarea:hover
            {
               cursor : default !important;
            }

             <!--a{
                cursor: default !important;
            }-->
        </style>
        <script>
            function myfun () {
                window.open('/home/home.jsp','_self'); 
                return false;               
            }
        </script>  
    </head>
    
    <body>   
    <div id="loading" ng-hide="!showProcessing">
        <img src="{!URLFOR($Resource.walkalong,'img/ajax-loader.gif')}" class="ajax-loader"/><br/>
    </div> 
 
    <div class="container">
        <!--<apex:form>
            <apex:commandButton value="Back" action="{!Back}" id="BackButton" styleClass="btn btn-danger btn-sm navbar-btn" style="float:right; margin-right:0pt" rendered="{!!SF1}" />
        </apex:form>-->
        <div class="pull-right">
            <apex:outputPanel rendered="{!!SF1}"><button class="btn btn-danger btn-sm navbar-btn" data-toggle="modal" onclick="myfun()"><span class="glyphicon glyphicon-step-backward"></span>&nbsp;&nbsp;Back</button></apex:outputPanel>
        </div> 
        
        <h3 ng-show="isCarMgrUser">
        <!--<h3 >-->
            Please Select One: <font color="red">*</font><br/>
            &nbsp;<input type="radio"  ng-model="feedbackAbout" value="carMgr" ng-click="submittedObsForCarMgr()" >Submitted FeedBack of your own</input>&nbsp;&nbsp;
            <input type="radio" ng-model="feedbackAbout" value="car" ng-click="submittedObsForCar()" >Submitted FeedBack of your Rep</input>                       
        </h3>
        
            <!--<h3 ng-show="showXspPick">
            Select your Sales Observer: <font color="red">*</font>
            <select class="form-control" ng-model="walkAlongData.selectedXSP" ng-change="xspSelected()" >
                <option ng-repeat="mgr in managerList" value="{{mgr.id}}">{{mgr.name}}</option>
            </select>       
        </h3> {{managerList}} --> 
        <h3 ng-show="showXspPick">
            Select your Sales Professional: <font color="red">*</font>
            <select class="form-control" ng-model="walkAlongData.selectedXSP" ng-change="xspSelected()" >
                <option ng-repeat="xsp in xspList |filter: !{ id: carMgr.id}" value="{{xsp.id}}">{{xsp.name}}</option>
            </select>       
        </h3> 
      
       
        <h3>
            Select Submitted FeedBack:<font color="red">*</font>
            <select class="form-control" ng-model="walkAlongData.selectedfeedbackRequest" ng-change="fetchXspFeedback()" >
                <option ng-repeat="feedbackreq in feedBackReqList" value="{{feedbackreq.id}}">{{feedbackreq.XspFeedbackName}}</option>
            </select>       
        </h3>
     
        <form class="form-inline" ng-show="walkAlongData.selectedfeedbackRequest">
            <div class="form-group divmargin">
                <label for="exampleInputName2">Feedback From :</label>
                <input type="text" class="form-control" value="{{walkAlongData.feedbackFrom}}" style="pointer-events: none;" />
            </div>
            <div class="form-group divmargin">
                <label for="exampleInputName2">Feedback To :</label>          
                <input type="text" class="form-control" placeholder=".col-md-2" value="{{walkAlongData.feedbackTo}}" style="pointer-events: none;" />
            </div>          
            <div class="form-group divmargin">
                <label for="exampleInputName2">Submitted Date :</label>          
                <input type="text" class="form-control" placeholder=".col-md-2" value="{{walkAlongData.submittedDate}}" style="pointer-events: none;" />
            </div>
            <div class="form-group divmargin">
                <label for="exampleInputName2">Overall Score :</label>          
                <input type="text" class="form-control" placeholder=".col-md-2" value="{{walkAlongData.score }}" style="pointer-events: none;" />
            </div>           
        </form>  
        
        <form ng-show="walkAlongData.selectedfeedbackRequest">
            <div  ng-show="walkAlongData.huddleActivity">
                <label>Huddle Name :</label>          
                <input readonly="readonly" type="text" class="form-control" ng-model="walkAlongData.huddleActivity"/>
            </div>          
            <div class="form-group divmargin" ng-show="walkAlongData.oneOnOneCoachingActivity">
                <label>1:1 Coaching Name :</label>          
                <input readonly="readonly" type="text" class="form-control" ng-model="walkAlongData.oneOnOneCoachingActivity "  rows="2" cols="40"/>
            </div>
            <div class="form-group divmargin" ng-show="walkAlongData.fieldObservationActivity">
                <label>Observation Name :</label>          
                <input readonly="readonly" type="text" class="form-control" ng-model="walkAlongData.fieldObservationActivity "  rows="2" cols="40"/>
            </div>
        </form>  
        <!--div ng-if ="walkAlongData.recordTypeName == 'Property Visit'">
            <h3 ng-show="walkAlongData.selectedfeedbackRequest">
                Selected properties:
                <div>                       
                    <textarea readonly="readonly" rows="2" cols="124">{{walkAlongData.propList}}</textarea>
                </div>
            </h3>
        </div-->
        
        
        <h3 ng-show="walkAlongData.selectedfeedbackRequest && walkAlongData.recordTypeName != 'Retail Manager Observation'">
            Area of focus: <font color="red"> *</font> 
            <select style="pointer-events: none;" class="form-control" ng-model="walkAlongData.areaOfFocus">
                <option ng-repeat="category in walkAlongData.categories" ng-value="{{category.id}}" >{{category.text}}</option>
                <option value="">All the Above</option>
            </select>
        </h3>
        
        
        <h3 ng-show="walkAlongData.selectedfeedbackRequest && walkAlongData.recordTypeName != 'Indirect Observation'">
            Overall notes: <font ng-hide="walkAlongData.recordTypeName == 'Retail Manager Observation'" color="red"> *</font>
            <textarea readonly="readonly"  class="form-control smart-detect-special-characters" ng-model="walkAlongData.overallNotes" rows="2" cols="40" aria-label="..." placeholder="Overall Notes"></textarea>
        </h3>
        
        <h3 ng-show="walkAlongData.selectedfeedbackRequest && walkAlongData.recordTypeName == 'Indirect Observation'">
            Action items: <font color="red"> *</font>
            <textarea readonly="readonly"  class="form-control smart-detect-special-characters" ng-model="walkAlongData.overallNotes" rows="2" cols="40" aria-label="..." placeholder="Action Items"></textarea>
        </h3>
        
        <h3 ng-show="walkAlongData.selectedfeedbackRequest && showXspPick && walkAlongData.isPrivateNotesVisible">
             Private notes:
             <textarea readonly="readonly" class="form-control smart-detect-special-characters" ng-model="walkAlongData.privateNotes" rows="2" cols="40" aria-label="..." placeholder="Private Notes"></textarea>
        </h3>
        
        <h3 ng-show="walkAlongData.selectedfeedbackRequest && walkAlongData.recordTypeName == 'Retail Manager Observation'">
            Transaction types:<font color="red"> *</font>                            
            <select style="pointer-events: none;" class="form-control smart-detect-special-characters" ng-model="walkAlongData.selectedTransactionTypes">
                <option class="form-control smart-detect-special-characters" ng-repeat="type in walkAlongData.transactionTypes" ng-value="type" ng-model="type">{{type}}</option>                                
            </select> 
        </h3>
        
        <!--h3 ng-show="walkAlongData.selectedfeedbackRequest && flag">
            Huddle Observed: <font color="red"> *</font> 
            <select style="pointer-events: none;" class="form-control" ng-model="walkAlongData.selectedActivity">
                <option ng-repeat="category in walkAlongData.selectedActivity" ng-value="{{category.id}}" >{{category.text}}</option>
            </select>
        </h3-->
        
        <h3 ng-show="walkAlongData.selectedfeedbackRequest">
            <div ng-show ="walkAlongData.recordTypeName == 'XSP Ridealong'">
                <apex:outputPanel rendered="{!OR($Profile.Name == $Label.DSRProfileName, $Profile.Name == 'Sales Development Manager', $Profile.Name == 'Area Sales Manager', $Profile.Name == 'Direct Sales Director')}">
                <form class="form-inline">
                    <div class="form-group">
                        <label for="exampleInputName2">Knocks observed</label> <font color="red"> *</font>
                        <input type="text" class="form-control" value="{{walkAlongData.knocks}}" style="pointer-events: none;" />
                    </div>
                    <div class="form-group">
                        <label for="exampleInputName2">Contacts</label> <font color="red"> *</font>
                        <input type="text" class="form-control" value="{{walkAlongData.contacts}}" style="pointer-events: none;" />
                    </div>
                    <div class="form-group">
                        <label for="exampleInputName2">Starts</label>  <font color="red"> *</font>         
                        <input type="text" class="form-control" placeholder=".col-md-2" value="{{walkAlongData.starts}}" style="pointer-events: none;" />
                    </div>
                </form>  
                <br/>
                </apex:outputPanel>
            </div>       
            <ul class="nav nav-pills nav-stacked col-md-2" >
                <li ng-repeat="category in walkAlongData.categories" ng-class="{'active':$first}">
                    <a href="#{{category.category}}" data-toggle="pill">{{category.text}}</a>
                </li>
            </ul>
            
            <div class="tab-content" ng-if="walkAlongData.categories !== null">
                <div ng-repeat="category in walkAlongData.categories" id="{{category.category}}" ng-class="{'tab-pane fade in active':$first,'tab-pane fade in':!$first}">
                    <div class="col-md-10">
                        <table class="table table-striped">
                            <tr>
                                <td valign="middle" width="15%">
                                    <h4 ng-if="showXspPick">Overall {{category.text}} rating:</h4>
                                    <h4 ng-if="!showXspPick">Overall rating:</h4>
                                </td>
                  
                                <td valign="middle">
                                    <div ng-init="UnacceptableFlag=false;NeedsImpFlag=false;AchievedExpFlag=false;HighlyEffeFlag=false;ExceptionalFlag=false;" class="btn-group btn-group-sm pull-right" data-toggle="buttons" style="pointer-events: none;">                       
                                        <label class="btn btn-default {{category.rating=='N/A' ? 'active':''}}" ng-click="setRating(category,'N/A')" >
                                            <input type="radio" name="options_{{category.text}}" id="option1" autocomplete="off">N/A</input>
                                        </label>
                                                        
                                        <label ng-show ="walkAlongData.recordTypeName == 'Indirect Observation' || walkAlongData.recordTypeName == 'Retail Manager Observation'" class="btn btn-default {{category.rating=='Unacceptable' ? 'active':''}}"  >
                                            <input style="pointer-events:none;" type="radio" name="options_{{category.text}}" id="option1" autocomplete="off">Unacceptable</input>
                                        </label>
                                        <!--a ng-show ="walkAlongData.recordTypeName == 'Indirect Observation'" class="btn btn" style="pointer-events: auto;"> 
                                            <span style="position: relative;margin: -8px; cursor: pointer;" ng-click="UnacceptableFlag = !UnacceptableFlag;NeedsImpFlag = false;AchievedExpFlag = false;HighlyEffeFlag = false;ExceptionalFlag = false" class="glyphicon glyphicon-info-sign" id="id1" aria-hidden="true"></span>
                                        </a-->
                          
                                        <label class="btn btn-default {{category.rating=='Needs Improvement' ? 'active':''}}"  >
                                            <input style="pointer-events:none;" type="radio" name="options_{{category.text}}" id="option1" autocomplete="off">Needs Improvement</input>
                                        </label>
                                        <!--a class="btn btn" style="pointer-events: auto;">
                                            <span style="position: relative;margin: -8px;" ng-click="NeedsImpFlag = !NeedsImpFlag;UnacceptableFlag = false;AchievedExpFlag = false;HighlyEffeFlag = false;ExceptionalFlag = false" class="glyphicon glyphicon-info-sign" id = "id2" aria-hidden="true"></span>
                                        </a-->
                          
                                        <label class="btn btn-default {{category.rating=='Achieved Expectations' ? 'active':''}}" ng-click="setRating(category,'Achieved Expectations')">
                                            <input type="radio" name="options_{{category.text}}" id="option1" autocomplete="off">Achieved Expectations</input>
                                        </label>
                                        <!--a class="btn btn" style="pointer-events: auto;">
                                            <span style="position: relative;margin: -8px;" ng-click="AchievedExpFlag = !AchievedExpFlag;UnacceptableFlag = false;NeedsImpFlag = false;HighlyEffeFlag = false;ExceptionalFlag = false" class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>
                                        </a-->
                          
                                        <label class="btn btn-default {{category.rating=='Highly Effective' ? 'active':''}}" ng-click="setRating(category,'Highly Effective')">
                                            <input type="radio" name="options_{{category.text}}" id="option2" autocomplete="off">Highly Effective</input>
                                        </label>
                                        <!--a class="btn btn" style="pointer-events: auto;">
                                            <span style="position: relative;margin: -8px;" ng-click="HighlyEffeFlag = !HighlyEffeFlag;UnacceptableFlag = false;NeedsImpFlag = false;AchievedExpFlag = false;ExceptionalFlag = false" class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>
                                        </a-->
                          
                                        <label ng-show ="walkAlongData.recordTypeName == 'Indirect Observation' || walkAlongData.recordTypeName == 'Retail Manager Observation'" class="btn btn-default {{category.rating=='Exceptional' ? 'active':''}}" ng-click="setRating(category,'Highly Effective')">
                                            <input type="radio" name="options_{{category.text}}" id="option2" autocomplete="off">Exceptional</input>
                                        </label>     
                                        <!--a ng-show ="walkAlongData.recordTypeName == 'Indirect Observation'" class="btn btn" style="pointer-events: auto;">
                                            <span style="position: relative;margin: -8px;" ng-click="ExceptionalFlag = !ExceptionalFlag;UnacceptableFlag = false;NeedsImpFlag = false;AchievedExpFlag = false;HighlyEffeFlag = false" class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>
                                        </a>
                            
                                        <label ng-show="UnacceptableFlag" style="font-size:14px">Performance does not meet expectations.</label>
                                        <label ng-show="NeedsImpFlag" style="font-size:14px">Performance meets some, but not all expectations.</label> 
                                        <label ng-show="AchievedExpFlag" style="font-size:14px">Performance meets and sometimes exceeds expectations.</label> 
                                        <label ng-show="HighlyEffeFlag" style="font-size:14px">Performance frequently exceeds expectations.</label> 
                                        <label ng-show="ExceptionalFlag" style="font-size:14px">Performance significantly and consistently exceeds expectations.</label-->      
                          
                                    </div>
                                </td>
                            </tr>
                        </table> 
                        
                        <h4 ng-show="walkAlongData.selectedfeedbackRequest && !isSuperCoachCarObs">
                            &nbsp;&nbsp;Overall {{category.text}} notes:<!--<font color="red"> *</font>--> <!-- <span ng-repeat="question in category.questions"> <textarea  style="pointer-events: none;"  class="form-control" ng-model="questionNotes" id="overall_cat_notes" rows="2" cols="40" aria-label="..." placeholder="Overall {{category.text}} notes"></textarea></span> -->
                            <!--<span id="textarea" class="form-control"><span ng-repeat="question in category.questions">{{question.notes}}&nbsp;</span></span>-->
                            <textarea readonly="readonly"  class="form-control smart-detect-special-characters" ng-model="category.questions[0].notes" rows="2" cols="40" aria-label="..." placeholder="Overall {{category.text}} notes"></textarea>
                            <textarea style="display: none;"  class="form-control smart-detect-special-characters" ng-model="walkAlongData.overallNotes" rows="2" cols="40" aria-label="..."></textarea> 
                        </h4>
                    
                        <table class="table table-striped">
                            <tr ng-repeat="question in category.questions">
                        
                                <td width="50%">{{question.name}}&nbsp;&nbsp;<a ng-show="{{question.text != '@@@'}}" ng-click="question.showHelpText = !question.showHelpText"><span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span></a>
                                    <br/>
                                    <h5 ng-show="question.showHelpText">{{question.text}}</h5> 
                                    <textarea ng-show="question.showNotes" class="form-control"  id="feedback_notes" rows="2" cols="40" aria-label="..." placeholder="{{question.name}} notes" ng-model="question.notes" style="pointer-events: none;" ></textarea>
                                </td>
                            
                                <td>
                                    <!--<label class="btn btn-default pull-right">
                                    <a ng-click="question.showNotes = !question.showNotes"><span class="glyphicon glyphicon-comment" aria-hidden="true"></span></a>
                                    </label>-->
                                    <div class="btn-group btn-group-sm pull-right" data-toggle="buttons" style="pointer-events: none;">
                                        <label class="btn btn-default {{question.rating=='N/A' ? 'active':''}}"  >
                                            <input type="radio" name="options_{{$index}}" id="option1" autocomplete="off" ng-model="question.rating" style="pointer-events:none;">N/A</input>
                                        </label>
                                        <label class="btn btn-default {{question.rating=='Strength' ? 'active':''}}" >
                                            <input type="radio" name="options_{{$index}}" id="option1" autocomplete="off" ng-model="question.rating">Strength</input>
                                        </label>
                                        <label class="btn btn-default {{question.rating=='Opportunity' ? 'active':''}}" >
                                            <input type="radio" name="options_{{$index}}" id="option1" autocomplete="off" ng-model="question.rating">Opportunity</input>
                                        </label>
                                    </div>
                                </td>

                            </tr>
                               
                        </table>
                    </div>
                </div>
            </div>
        </h3>
    </div>
       
    <script type="text/javascript">
        function closeThisPage(){
            Sfdc.canvas.publisher.publish({ name: "publisher.close",
                                             payload:{ refresh:"true" }
                                         }
            );

        }      
        
        var app = angular.module('WalkAlongApp', []);
        angular.module('WalkAlongApp').directive('smartDetectSpecialCharacters', function($parse){
            return {
                priority: 1,
                restrict: 'C',
                require: 'ngModel',
                link: function(scope, elm, attr, ngModelCtrl) {
                    var hiddenPre=document.createElement("pre");
                    function decodeEntities(value){
                        if (!value) { return ''; }       
                        hiddenPre.innerHTML = value.replace(/</g,"&lt;");
                        // innerText depends on styling as it doesn't display hidden elements.
                        // Therefore, it's better to use textContent not to cause unnecessary reflows.
                        return hiddenPre.textContent;
                    }
                      
                    var convertSpecial = function(inputValue){
                        var converted = decodeEntities(inputValue)
                        if(converted !== inputValue) {
                            ngModelCtrl.$setViewValue(converted);
                            ngModelCtrl.$render();
                        }         
                        return converted;
                    }
                 
                    var model = $parse(attr.ngModel);
                    ngModelCtrl.$parsers.push(convertSpecial);
                    convertSpecial(model(scope));
                }
            };
        });
        
        app.controller('WalkalongUtilsReadOnly', function($scope){
            $scope.textareaText = "";
        });
        app.controller('WalkalongUtilsReadOnly', 
            function($scope,$sce){
                $scope.initComplete = false;
                $scope.showProcessing = false;
                $scope.showProcessingText = "";
                $scope.showXspPick=true; 
                $scope.isCarMgrUser=false; 
               // US1061559 - Start
               $scope.feedbackAbout="car"; // Set default to "car" previously it was "carMgr"
               // US1061559 - End
                
                $scope.counter =['None','0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20',
                                '21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40',
                                '41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60'];
                                
                $scope.knockCounter =['None','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20',
                                '21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40',
                                '41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60'];               
        
                
                
                          
                $scope.initializeData = function(){                 
                    $scope.showProcessing = true;
                    $scope.showProcessingText = "..."                                       
                    if (typeof Visualforce === 'object') {
                        Visualforce.remoting.Manager.invokeAction(
                            'WalkalongUtilsReadOnly.getXSPList',
                             function(result, event){                                
                                if (event.status) {                                                                 
                                    $scope.$apply(function () {  
                                        if(result.length > 0){
                                            if(result[0].isCarMgr){                                             
                                                $scope.isCarMgrUser = true;
                                                $scope.carMgr = result[0];                                              
                                                $scope.userList = result;                                                                                               
                                            }
                                            if(result[0].xspLogin){   
                                                // US1061559 - Start
                                                if($scope.isCarMgrUser){
                                                    $scope.showXspPick = true;
                                                }else{
                                                    $scope.showXspPick = false;
                                                }                                                                                                
                                                $scope.xspList = result;
                                                // US1061559 - End
                                                Visualforce.remoting.Manager.invokeAction(
                                                    'WalkalongUtilsReadOnly.getXspFeedbackData',result[0].id,
                                                    function(result, event){
                                                    
                                                        if (event.status){ 
                                                            if(result.length>0){                                   
                                                                $scope.$apply(function () {
                                                                    // US1061559 - Start                                                                
                                                                    if($scope.isCarMgrUser){
                                                                        $scope.carMgrFeedBackReqList=result;
                                                                    }else{                                                                      
                                                                        $scope.feedBackReqList=result;
                                                                    } 
                                                                    // US1061559 - End                                                               
                                                                });
                                                            }                                                              
                                                        }else{
                                                            console.log(event);
                                                        }
                                                    }, 
                                                    {escape: true}
                                                );
                                                
                                            }else{                                            
                                                $scope.xspList = result;                                        
                                            }
                                        }                                                                                    
                                        $scope.showProcessing=false;
                                    });
                                    
                                }else{
                                    console.log(event);
                                }
                            }, 
                            {escape: true}
                        );
                       
                    }else{
                        console.log('Visualforce is not available as an object! Did you forget to include the ngForce component?');
                        $scope.initComplete=true;
                    } 
                    
                };
                
                $scope.submittedObsForCarMgr = function(){                    
                    $scope.showXspPick = false;
                    $scope.feedBackReqList = $scope.carMgrFeedBackReqList;
                    $scope.walkAlongData = ''                   
                    $scope.showProcessing = false;
                };
                
                $scope.submittedObsForCar = function(){                 
                    $scope.showXspPick=true;
                    $scope.feedBackReqList = '';
                    $scope.walkAlongData = ''                   
                    $scope.xspList = $scope.userList;                   
                };
                
                $scope.xspSelected = function(){
                    $scope.showProcessing=true;
                    $scope.showProcessingText="...";  
                    $scope.walkAlongData.selectedfeedbackRequest = "";   
                    if (typeof Visualforce === 'object') {                                                    
                       Visualforce.remoting.Manager.invokeAction(
                            'WalkalongUtilsReadOnly.getXspFeedbackData',$scope.walkAlongData.selectedXSP,
                            function(result, event){                                   
                                if (event.status) {                                                                                                                                                                                  
                                        $scope.$apply(function () {                            
                                            $scope.feedBackReqList=result;                                                                                  
                                            $scope.showProcessing=false;
                                        });
                                   
                                }else{
                                    console.log(event);
                                }
                            }, 
                            {escape: true}
                        );
                       
                    }else{
                        console.log('Visualforce is not available as an object! Did you forget to include the ngForce component?');
                        $scope.initComplete=true;
                    }                 
                };
                
                $scope.removeSpecial = function(textinput) {
                    return $sce.trustAsHtml(textinput);
                };
                
                $scope.fetchXspFeedback = function(){                  
                    $scope.showProcessing=true;
                    $scope.showProcessingText="Retrieving saved walkalong...."
                    if (typeof Visualforce === 'object') {
                       Visualforce.remoting.Manager.invokeAction(
                            'WalkalongUtilsReadOnly.getFeedbackForXsp',$scope.walkAlongData.selectedfeedbackRequest,                        
                            function(result, event){                               
                                if (event.status && result) {
                                    $scope.$apply(function () {
                                    
                                        if(result.recordTypeName == "{!$Label.CAR_Manager_1_1_Obs}" || result.recordTypeName == "{!$Label.CAR_Manager_Huddle_Obs}" || result.recordTypeName == "{!$Label.CAR_Manager_Field_Obs}"){
                                            $scope.isSuperCoachCarObs = true;
                                        }else{
                                            $scope.isSuperCoachCarObs = false;
                                        }
                                        $scope.showProcessing=false;
                                        $scope.showProcessingText="";
                                        $scope.wfr=$scope.walkAlongData.selectedfeedbackRequest;
                                        $scope.wfr1=$scope.walkAlongData.selectedRecordType;
                                        $scope.walkAlongData= result ;
                                        $scope.initComplete=true;
                                        $scope.walkAlongData.selectedfeedbackRequest=$scope.wfr;
                                        $scope.walkAlongData.selectedRecordType = $scope.wfr1;
                                        <!-- alert($scope.walkAlongData.toSource());-->
                                        if($scope.walkAlongData.requestId=='' ||$scope.walkAlongData.requestId==undefined)
                                        {
                                            $scope.walkAlongStarted=false;
                                        }else{ $scope.walkAlongStarted=true;
                                        $scope.walkAlongStopped=true;}
                                        getQuestionNotes();
                                    });
                                }else{
                                    $scope.$apply(function () {
                                        $scope.showProcessing=false;
                                        $scope.showProcessingText="";
                                    });
                                }
        
                            }, 
                            {escape: true}
                        );
                    }else{
                        console.log('Visualforce is not available as an object! Did you forget to include the ngForce component?');
                        $scope.initComplete=true;
                    }
                };
                
                var getQuestionNotes = function(){                           
                    $scope.questionNotes = "";
                    angular.forEach($scope.walkAlongData.categories, function(value, key){                              
                        angular.forEach(value.questions, function(value, key){
                            if(value.notes){
                                $scope.questionNotes = $scope.questionNotes + " " + value.notes;
                            }
                        });
                    });
                };                              
            }
        );
        
    </script>
    </body>
</html>
</apex:page>