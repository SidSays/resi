<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
  <!-- (c) 2009 Rally Software Development Corp. All rights reserved. -->
  <link href="/sCSS/15.0/Theme2/default/common.css" type="text/css" rel="stylesheet"/>
  <script type="text/javascript" src="/js/functions.js"></script>
  <script src="/soap/ajax/15.0/connection.js" type="text/javascript"></script>
    {!INCLUDE($SControl.rallyObj)}
    {!INCLUDE($SControl.GetArtifacts)}
  <script type="text/javascript">
    rally.publishRallyStatus = {};
    rally.publishRallyStatus.init = function () {
      rally.init();
      var cases = rally.publishRallyStatus.getOpenCases();
      var caseIterator = new sforce.QueryResultIterator(cases);
      var caseRecordIterator = new sforce.QueryResultIterator(cases);

      var ga = new rally.getArtifacts();
      var rallyRefs = ga.getRallyRefs(caseRecordIterator);
      var rallyInfo = ga.fetch(rallyRefs);
      /* This times out */

      var caseObjs = [];
      var caseCount = 0;
      var caseCountLimit = 199;
      var totalCaseCount = 0;

      while (caseIterator.hasNext()) {
        var record = caseIterator.next();
        var skip = 0;
        var oid = rally.getArtifactOid(record.RALLYSM__Rally_Artifact_Ref__c);
        var artifactScheduleState = "";
        var artifactRelease = "";

        if (rallyInfo[oid]) {
          artifactScheduleState = rallyInfo[oid].ScheduleState;
          for (var attr in rallyInfo[oid].Release) {
            if (attr == "_refObjectName") {
              artifactRelease = rallyInfo[oid].Release._refObjectName;
            }
          }
          if (artifactRelease.length == 0) {
            artifactRelease = "Unscheduled";
          }
          caseCount++;
          totalCaseCount++;
        }
        else {
          skip = 1;
        }
        if (!skip) {
          if (caseCount > caseCountLimit) {
            caseCount = 1;
            sforce.connection.update(caseObjs);
            caseObjs = [];
          }
          caseObjs.push(rally.updateCaseDetail.updateCase(record.Id, artifactScheduleState, artifactRelease));
        }
      }
      var results = sforce.connection.update(caseObjs);
      alert("The Development Status and Release Target fields of all open cases associated to Rally (total of " + totalCaseCount + ") have been updated with the latest Rally Schedule State and Release information.");
      self.close();
    };

    rally.publishRallyStatus.getOpenCases = function () {
      var cases = sforce.connection.query("select Id, RALLYSM__Rally_Artifact_Ref__c from Case where IsClosed = false and RALLYSM__Rally_Association__c = 'Yes'");
      return(cases);
    }


  </script>
</head>

<body onLoad="rally.publishRallyStatus.init();">
</body>
</html>