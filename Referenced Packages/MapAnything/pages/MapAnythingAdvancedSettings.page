<apex:page title="MapAnything Advanced Settings" setup="true" controller="sma.MAComponentCon" extensions="sma.MARemoteFunctions">

    <script type='text/javascript'>
        var MARemoting = {
            processAJAXRequest : '{!$RemoteAction.MARemoteFunctions.processAJAXRequest}'
        }
    </script>

	<!-- CSS -->
	<style type='text/css'>
		#settings-loader {
			
			display: none;
		}
		
		.setting-table td
		{
		    vertical-align: middle;
		}
		
		.setting-table input[type='text']
		{
		    text-align:center;
		    width: 50px;
		}
		
		.ma-modal-title {
            color: #5876a3;
            font-weight: 300;
            line-height: 1.25;
            text-transform: inherit;
            letter-spacing: 0;
            font-size: 1rem;
        }
		
	</style>

	<!-- jQuery -->
	<script type='text/javascript' src="{!URLFOR($Resource.MapAnything, 'js/jquery-1.7.1.min.js')}"></script>
	<!-- Glyphicons -->
    <apex:stylesheet value="{!URLFOR($Resource.sma__MapAnything, 'css/MapAnything.css')}"/>
	<!-- MA -->
	<c:MA />

    <apex:outputPanel layout="none" rendered="{! $User.UIThemeDisplayed == 'Theme4d' }">
        <script type='text/javascript'>
            $.ajaxSetup({
                dataFilter: function (rawData,type)
                {
                    try
                    {
                        //console.log('rawdata:', rawData);
                        //console.log(type);
                        
                        if (rawData != undefined  && rawData != '')
                        {
                            if (type === 'JSON' || type == 'JSONP' || type=='json' || type =='jsonp')
                            {
                                //console.log('rawdata 2:', rawData.replace(/<script.*?>.*?<\/script>/igm, ''));
                                return rawData.replace(/<script.*?>.*?<\/script>/igm, '');
                            }
                        }
                    }
                    catch (ex)
                    {
                        
                    }
                }
            });
        
            jQuery.ajaxSetup({
                dataFilter: function (rawData,type)
                {
                    try
                    {
                        //console.log('rawdata:', rawData);
                        //console.log(type);
                        
                        if (rawData != undefined  && rawData != '')
                        {
                            if (type === 'JSON' || type == 'JSONP' || type=='json' || type =='jsonp')
                            {
                                //console.log('rawdata 2:', rawData.replace(/<script.*?>.*?<\/script>/igm, ''));
                                return rawData.replace(/<script.*?>.*?<\/script>/igm, '');
                            }
                        }
                    }
                    catch (ex)
                    {
                        
                    }
                }
            });
    
        </script>
    </apex:outputPanel>

	<!-- JS -->
	<script type='text/javascript'>
		$(function () 
		{
		    //populate mass-field-update-scope-size options
		    var massFieldUpdateSelectOptions = '';
		    for (var i = 10; i < 210; i+= 10)
		    {
		        massFieldUpdateSelectOptions += '<option>' + i + '</option>';
		    }
		    $('#mass-field-update-scope-size').html(massFieldUpdateSelectOptions);
		    
			//load settings
			$('#settings-loader').show();
            var processData = { 
                ajaxResource : 'MAAdminAJAXResources',
                securityToken : '{!securityToken}',
				action	: 'get_settings'
            };
            
            Visualforce.remoting.Manager.invokeAction(MARemoting.processAJAXRequest,
                processData,
                function(response, event){
    				if (response.success) {
    					MA.Util.removeNamespace((response.data || {}));
    					try { $('#nearby-checkin').attr('checked', response.data['Sneaky-Nearby-Checkin'].Value__c == 'false' ? false : 'checked'); } catch (err) { }
    					try { $('#desktop-sidebar').attr('checked', response.data['Sneaky-Desktop-Sidebar'].Value__c == 'true' ? 'checked' : false); } catch (err) { }
    					try { $('#totango-enabled').attr('checked', response.data['TotangoEnabled'].Value__c == 'true' ? 'checked' : false); } catch (err) { }
    					try { $('#cloudbiltapi-force-salesforce-proxy-enabled').attr('checked', response.data['CloudbiltAPIForceSFDCProxyEnabled'].Value__c == 'true' ? 'checked' : false); } catch (err) { }
    					try { $('#waypointtrigger-disabled').attr('checked', response.data['RunWayPointTriggers'].Value__c == 'true' ? 'checked' : false); } catch (err) { }
    					try {$('#animate-liveLayers').prop('checked', response.data['AnimateLiveLayers'].Value__c == 'true' ? true : false); } catch(err){}
    					try {$('#store-route-geometry').prop('checked', response.data['StoreRouteGeometry'].Value__c == 'true' ? true : false); } catch(err){}
    					try {$('#remove-aggregate_tab').prop('checked', response.data['RemoveAggregatesTooltipTab'].Value__c == 'true' ? true : false); } catch(e){}
    
    					try {$('#newMobile-enabled').prop('checked', response.data['EnableNewMobile'].Value__c == 'true' ? true : false); } catch(err){}
    					try {
                            var googleURL = response.data['GoogleMapsURL'].Value__c || '';
                            $('#google-url').val(googleURL);
                        } catch (err) { }
    
    					try 
    					{
    						var massFieldUpdateScopeSize = parseInt(response.data['MassFieldUpdateScopeSize'].Value__c);
    						console.log(massFieldUpdateScopeSize);
    						$('#mass-field-update-scope-size').val(isNaN(massFieldUpdateScopeSize) ? 201 : massFieldUpdateScopeSize);
    					} catch (err) {
    					    $('#mass-field-update-scope-size').val(200);
    					}
    					
    					try { $('#imageserver-enabled').attr('checked', response.data['ImageServerEnabled'].Value__c == 'true' ? 'checked' : false); } catch (err) { }
    					try 
    					{
    						var threads = parseInt(response.data['Sneaky-ThreadedGeocoding'].Value__c);
    						$('#threaded-geocoding').val(isNaN(threads) ? 5 : threads);
    					} catch (err) {}
    					
    					try 
    					{
    						var clusterThreshold = parseInt(response.data['AutomaticClusterThreshold'].Value__c);
    						$('#automaticclusterthreshold-input').val(isNaN(clusterThreshold) ? 500 : clusterThreshold);
    					} catch (err) {}
    				}
    				else {
    					alert('Unable to load settings');
    				}
    				$('#settings-loader').hide();
                },{buffer:false,escape:false}
            );

			//save settings on change
			//$('#settings-wrapper input[type="checkbox"]').change(SaveSettings);              
			//$('#settings-wrapper input[type="text"]').blur(SaveSettings);
		});

		function SaveSettings ()
		{
			//show loading
			$('#settings-loader').show();

			//put all settings in a request obj
            var processData = {
                ajaxResource : 'MAAdminAJAXResources',
                securityToken : '{!securityToken}',
				action	: 'save_settings',
            	settings: JSON.stringify({
                	'Sneaky-Nearby-Checkin'		: $('#nearby-checkin').is(':checked') ? 'true' : 'false',
                	'Sneaky-Desktop-Sidebar'	: $('#desktop-sidebar').is(':checked') ? 'true' : 'false',
                	'TotangoEnabled'	        : $('#totango-enabled').is(':checked') ? 'true' : 'false',
                	'CloudbiltAPIForceSFDCProxyEnabled'	: $('#cloudbiltapi-force-salesforce-proxy-enabled').is(':checked') ? 'true' : 'false',
                	'ImageServerEnabled'        : $('#imageserver-enabled').is(':checked') ? 'true' : 'false',
                	'Sneaky-ThreadedGeocoding'	: $('#threaded-geocoding').val(),
                	'AutomaticClusterThreshold'	: $('#automaticclusterthreshold-input').val(),
                	'MassFieldUpdateScopeSize'	: $('#mass-field-update-scope-size').val(),
                	'RunWayPointTriggers'       : $('#waypointtrigger-disabled').is(':checked') ? 'true' : 'false',
                	'AnimateLiveLayers'         : $('#animate-liveLayers').prop('checked') ? 'true' : 'false',
                	'RemoveAggregatesTooltipTab': $('#remove-aggregate_tab').prop('checked') ? 'true' : 'false',
                    'EnableNewMobile'           : $('#newMobile-enabled').prop('checked') ? 'true' : 'false',
                    'EnableNewMobile'           : $('#newMobile-enabled').prop('checked') ? 'true' : 'false',
                	'GoogleMapsURL'             : $('#google-url').val() || '',
                	'StoreRouteGeometry'        : $('#store-route-geometry').prop('checked') ? 'true' : 'false'
                })
            };
            
            //send request to save settings 
            Visualforce.remoting.Manager.invokeAction(MARemoting.processAJAXRequest,
                processData,
                function(response, event){
                    if(!response.success){
                        
                    	//alert('Unable to save settings');
                        var alertPopup = MA.Popup.showMAAlert({
                            template: '<div style="text-align:center;">Unable to save settings</div>',
                            okText : 'Ok',
                            okType : 'button-red'
                        });
                    	MA.log(response);
                    }
                    else
                    {
                        //alert("Saved!");
                        var alertPopup = MA.Popup.showMAAlert({
                            template: '<div style="text-align:center;">Settings saved!</div>',
                            okText : 'Ok',
                            okType : 'button-blue'
                        });
                    }
                    $('#settings-loader').hide();
                },{buffer:false,escape:false}
            );
		}
		
		
	</script>
	
	<c:MAAdminHeader PageTitle="Advanced Settings (MapAnything Employees Only)"/>

	<div id='settings-wrapper'>

		
        
        <table cellpadding="5" style="margin-top:10px; margin-bottom:10px;" class="setting-table">
            <tr>
                <td><center><input type='checkbox' id='nearby-checkin' checked='checked' /></center></td>
                <td>Allow checking in from MA Nearby</td>
            </tr>
            <tr>
                <td><center><input type='checkbox' id='desktop-sidebar' /></center></td>
                <td>Show sidebar on MA desktop</td>
            </tr>
            <tr>
                <td><center><input type='checkbox' id='totango-enabled' checked='checked' /></center></td>
                <td>Totango Enabled</td>
            </tr>
            <tr>
                <td><input type='text' id='threaded-geocoding' value='5'  /></td>
                <td>Geocode threads (0 for disabled)</td>
            </tr>
            <tr>
                <td><input type='text' id='automaticclusterthreshold-input' value='500'  /></td>
                <td>Cluster Threshold</td>
            </tr>
            <tr>
                <td><center><input type='checkbox' id='imageserver-enabled' /></center></td>
                <td>Image Server Enabled</td>
            </tr>
            <tr>
                <td><center><input type='checkbox' id='waypointtrigger-disabled' /></center></td>
                <td>Disable Waypoint Trigger</td>
            </tr>
            <tr>
                <td><center><input type='checkbox' id='cloudbiltapi-force-salesforce-proxy-enabled' /></center></td>
                <td>Process MapAnything<sup>TM</sup> API Traffic with Salesforce Proxy</td>
            </tr>
            <tr>
                <td>
                    <select id='mass-field-update-scope-size'>
                    </select>
                </td>
                <td>Mass Field Update Scope Size</td>
            </tr>
            <tr>
                <td><center><input type='checkbox' id='animate-liveLayers' /></center></td>
                <td>Animate MapAnything<sup>TM</sup> Live Layers</td>
            </tr>
            <tr>
                <td><center><input type='checkbox' id='store-route-geometry' /></center></td>
                <td>Save routing geometry on MapAnything<sup>TM</sup> routes object</td>
            </tr>
            <tr>
                <td><center><input type='checkbox' id='newMobile-enabled' /></center></td>
                <td>Enable New Mobile</td>
            </tr>
            <tr>
                <td><center><input type='checkbox' id='remove-aggregate_tab' /></center></td>
                <td>Remove Aggregates Tab from Shape and Cluster Tooltips</td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <div>Google Maps URL (Region Support) <span style="color: #ff6969;font-style: italic;font-size: 10px;">please do not modify</span></div>
                    <div><input style="width: 400px; text-align: left;" placeholder="https://maps.googleapis.com" type='text' id='google-url' /></div>
                </td>
            </tr>
            
        </table>
        
        <table>
            <tr>
                <td>
                    <button type="button" class="MAbutton button-blue" onclick="SaveSettings();">Save Settings</button>
                </td>
                <td>
                    <!-- Loader -->
		            <img id='settings-loader' src="{!URLFOR($Resource.MapAnything, 'images/chatterstatus-loader.gif')}"/>
                </td>
            </tr>
        </table>
		
        
        
	</div>
</apex:page>